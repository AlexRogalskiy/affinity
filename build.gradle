group = 'io.amient.affinity'
version = '0.2.0-SNAPSHOT'

ext {
    javaVersion = '1.8'
    junitVersion = '4.12'
    scalaVersion = '2.11.7'
    baseScalaVersion = scalaVersion.split("\\.\\d+\$")[0]
    typesafeConfigVersion = '1.3.0'
    akkaVersion = '2.4.10'
    zkClientVersion = '0.9'
    avroVersion = '1.8.1'
    jacksonVersion = '2.7.5'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}



allprojects {

    apply plugin: 'idea'

    version = rootProject.version

    //TODO create scala cross-compiled artifacts with scala_x.xx classifier for core, kafka_0.10, testutil
    //FIXME maven pluging is trying to authenticate with osshr during normal build which fails on standard dev machine
//    plugins.withType(MavenPlugin).whenPluginAdded {
//
//        task sourcesJar(type: Jar) {
//            classifier = 'sources'
//            from sourceSets.main.allSource
//        }
//
//        task javadocJar(type: Jar) {
//            classifier = 'javadoc'
//            from javadoc
//        }
//
//        artifacts {
//            archives javadocJar, sourcesJar
//        }
//
//        signing {
//            sign configurations.archives
//        }
//
//        idea {
//            module {
//                scopes.PROVIDED.plus += [configurations.provided]
//            }
//        }
//
//        test.systemProperties 'property': 'value'
//
//        uploadArchives {
//            repositories {
//                mavenDeployer {
//                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                        authentication(userName: ossrhUsername, password: ossrhPassword)
//                    }
//
//                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                        authentication(userName: ossrhUsername, password: ossrhPassword)
//                    }
//
//                    pom.project {
//                        name 'Affinity Library'
//                        packaging 'jar'
//                        // optionally artifactId can be defined here
//                        description 'Library for building fast, scalable, fault-tolerant Data APIs based on Akka, ZooKeeper and Kafka.'
//                        url 'https://github.com/amient/affinity'
//
//                        scm {
//                            connection 'scm:git:https://github.com/amient/affinity.git'
//                            developerConnection 'scm:git:https://github.com/amient/affinity.git'
//                            url 'https://github.com/amient/affinity.git'
//                        }
//
//                        licenses {
//                            license {
//                                name 'The Apache License, Version 2.0'
//                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                            }
//                        }
//
//                        developers {
//                            developer {
//                                id 'michal.haris'
//                                name 'Michal Haris'
//                                email 'mharis@amient.io'
//                            }
//                        }
//                    }
//                }
//            }
//        }
//    }

    plugins.withType(JavaPlugin).whenPluginAdded {

        sourceCompatibility = rootProject.ext.javaVersion

        repositories {
            mavenLocal()
            mavenCentral()
            maven {
                url "http://packages.confluent.io/maven/"
            }
        }

        configurations {
            provided
            testCompile.extendsFrom provided
        }

        sourceSets {
            main {
                compileClasspath += configurations.provided
            }
        }

        dependencies {
            testCompile group: 'junit', name: 'junit', version: junitVersion
        }
    }

    plugins.withType(ScalaPlugin).whenPluginAdded {

        task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
            main = 'org.scalatest.tools.Runner'
            args = ['-R', 'build/classes/test', '-o']
            classpath = sourceSets.test.runtimeClasspath
        }
        test.dependsOn scalaTest

        dependencies {
            compile 'org.scala-lang:scala-library:' + scalaVersion
            testCompile group: 'org.scalatest', name: 'scalatest_' + baseScalaVersion, version: '2.2.6'
            testCompile group: 'org.scalacheck', name: 'scalacheck_' + baseScalaVersion, version: '1.12.5'
        }
    }
}


//monkey patch for IDEA vs. Gradle 3.+
ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false
