affinity {

  cluster {
    num.partitions = 2
    coordinator {
      class = "io.amient.affinity.core.cluster.CoordinatorZk"
      zookeeper.timeout.connect.ms = 1000
      zookeeper.timeout.session.ms = 3000
      zookeeper.root = "/affinity"
    }
  }

  node {
    name = "SystemTests"

    region {
      partitions = [0, 1]
    }

    gateway {
      http {
        host = "127.0.0.1"
      }
    }
  }

}

akka.loglevel = "ERROR"

akka.remote {
  log-remote-lifecycle-events = off
  enabled-transports = ["akka.remote.netty.tcp"]
  netty.tcp {
    hostname = "127.0.0.1"
    port = 0
  }
}

akka.actor {

  provider = "akka.remote.RemoteActorRefProvider"

  warn-about-java-serializer-usage = off

  serializers {
    java = "akka.serialization.JavaSerializer"
    proto = "akka.remote.serialization.ProtobufSerializer"
    string = "io.amient.affinity.core.serde.StringSerde"
    //avro = "io.amient.affinity.TestAvroSerde"
  }

  serialization-bindings {
    "java.io.Serializable" = java
    "java.lang.String" = string
    "com.google.protobuf.Message" = proto
    //"io.amient.affinity.core.data.avro.AvroRecord" = avro
  }

}

