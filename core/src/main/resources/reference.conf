affinity {

  cluster {
    num.partitions = 0
    coordinator {
      class = "io.amient.affinity.core.cluster.CoordinatorZk"
      zookeeper {
        connect = "localhost:2181"
        timeout.connect.ms = 6000
        timeout.session.ms = 30000
        root = "/affinity"
      }
    }
  }


  node {
    startup.timeout.ms = 5000
    shutdown.timeout.ms = 30000
    //name = ""
    region {
      //partitions = []
    }
    gateway {
      http {
        host = "127.0.0.1"
      }
      tls.keystore {
        standard = "PKCS12"
        #password = "..."
        #resource = "..." or file = "..."
      }
    }
  }

  state {}

  zookeeper-schema-registry {
    zookeeper.connect = "localhost:2181"
    zookeeper.timeout.connect.ms = 6000
    zookeeper.timeout.session.ms = 30000
    zookeeper.root = "/affinity-schema-registry"
  }

  confluent-schema-registry {
    url.base = "http://localhost:8081"
  }

}

akka {
  #for websockets we need infinite idle timeout for server connection until akka/akka#21549 is solved
  http.server {
    idle-timeout = infinite
    parsing.illegal-header-warnings = off
  }

  // remote {
  //  log-remote-lifecycle-events = off
  //  enabled-transports = ["akka.remote.netty.tcp"]
  //  netty.tcp {
  //    hostname = "127.0.0.1"
  //    port = 0
  //  }
  //}

  actor {
    //provider = "akka.remote.RemoteActorRefProvider"

    warn-about-java-serializer-usage = on

    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
      string = "io.amient.affinity.core.serde.primitive.StringSerde"
      int = "io.amient.affinity.core.serde.primitive.IntSerde"
      option = "io.amient.affinity.core.serde.primitive.OptionSerde"
      unit = "io.amient.affinity.core.serde.primitive.UnitSerde"
      tuple = "io.amient.affinity.core.serde.primitive.TupleSerde"
    }

    serialization-bindings {
      "java.io.Serializable" = java
      "com.google.protobuf.Message" = proto
      "scala.Some" = option
      "scala.None" = option
      "scala.None$" = option
      "scala.runtime.BoxedUnit" = unit
      "java.lang.String" = string
      "java.lang.Integer" = int
      "scala.Tuple1" = tuple
      "scala.Tuple2" = tuple
      "scala.Tuple3" = tuple
      "scala.Tuple4" = tuple
      "scala.Tuple5" = tuple
      "scala.Tuple6" = tuple
      "scala.Tuple7" = tuple
      "scala.Tuple8" = tuple
      "scala.Tuple9" = tuple
    }
  }

  # Logging
  loglevel = "WARNING"
  log-config-on-start = off
  actor.debug.autoreceive = on
  log-dead-letters = off
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off

  # Disable legacy metrics in akka-cluster.
  cluster.metrics.enabled = off
  # Enable metrics extension in akka-cluster-metrics.
  #extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
}
