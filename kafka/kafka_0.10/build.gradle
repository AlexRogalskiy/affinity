group = rootProject.group
version = rootProject.version

apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'maven-publish'

//uploadArchives.repositories.mavenDeployer.pom.artifactId = 'kafka_0.10-scala_' + baseScalaVersion
publishing {
    publications {
        maven(MavenPublication) {
            artifactId 'kafka_0.10-scala_' + baseScalaVersion
            from components.java
        }
    }
}

install.repositories.mavenInstaller.pom.artifactId = 'kafka_0.10-scala_' + baseScalaVersion
def installer = install.repositories.mavenInstaller
[installer]*.pom*.whenConfigured { pom ->
    pom.dependencies.find {dep -> dep.groupId == 'io.amient.affinity' && dep.artifactId == 'core' }.artifactId = 'core-scala_'+baseScalaVersion
    pom.dependencies.find {dep -> dep.groupId == 'io.amient.affinity' && dep.artifactId == 'testing-kafka_0.10' }.artifactId = 'testing-kafka_0.10-scala_' + baseScalaVersion
}

ext {
    kafkaVersion = '0.10.0.1'
    confluentVersion = '3.0.0'
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

apply plugin: "com.github.johnrengelman.shadow"

//shadowJar {
//    dependencies {
//        project.configurations.provided.dependencies.each {
//            exclude(it)
//        }
//    }
//}
assemble.dependsOn shadowJar

dependencies {
    compile project(':core')
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: kafkaVersion
    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: confluentVersion
    compile 'org.scala-lang:scala-library:' + rootProject.scalaVersion
    testCompile project(':testutil:testing-kafka_0.10')
}



