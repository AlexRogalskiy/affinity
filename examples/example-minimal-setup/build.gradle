group = rootProject.group
version = rootProject.version

apply plugin: 'scala'
apply plugin: 'java'
apply plugin: "com.github.johnrengelman.shadow"

ext {
    mainClass = "io.amient.affinity.example.minimal.Main"
    mainScript = "example"
    kafkaMinorVersion = "0.10"
}

dependencies {
    compile project(':core')
    compile project(':rocksdb')
    compile project(':kafka:kafka_' + kafkaMinorVersion + ':storage-kafka')
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21'
    compile 'org.scala-lang:scala-library:' + rootProject.scalaVersion
}

build.dependsOn shadowJar
shadowJar {
    from { project.configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes(
                'Main-Class': mainClass,
                'version': project.version,
        )
    }
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
        resource = 'reference.conf'
    }
}

task createStartScripts(type: CreateStartScripts) {
    outputDir = file("build/scripts")
    mainClassName = mainClass
    applicationName = mainScript
    classpath = shadowJar.outputs.files
}

build.dependsOn createStartScripts


