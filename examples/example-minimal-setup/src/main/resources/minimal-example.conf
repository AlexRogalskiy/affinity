akka {
  loglevel = "INFO"
}

affinity {

  avro {
    schema.provider.class = "io.amient.affinity.avro.schema.MemorySchemaRegistry"
  }

  coordinator {
    class = "io.amient.affinity.core.cluster.CoordinatorEmbedded"
    id = 1
  }

  service {
    simple-keyspace {
      num.partitions = 2
      class = "io.amient.affinity.example.minimal.MySimplePartition"
    }
  }

  node {
    name = "MinimalExampleSystem"

    container {
      simple-keyspace = [0, 1]
    }

    gateway {
      class = "io.amient.affinity.example.minimal.MyHttpGateway"
      http {
        host = "0.0.0.0"
        port = 8881
      }
      tls.keystore {
        password = "123456"
        standard = "PKCS12"
        resource = "keystore.p12"
      }
    }
  }

  state.cache {
    storage.class = "io.amient.affinity.core.storage.kafka.KafkaStorage"
    storage.kafka {
      bootstrap.servers = "localhost:9092"
      topic = "minimal"
    }
    memstore.class = "io.amient.affinity.core.storage.rocksdb.MemStoreRocksDb"
    memstore.rocksdb.data.path = "./.data/minimal-example"
  }

}
